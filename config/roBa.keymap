#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        hyphen {
            bindings = <&kp MINUS>;
            key-positions = <20 21>;
        };

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <32 33>;
        };

        rclk {
            bindings = <&mkp RCLK>;
            key-positions = <19 20>;
        };

        copy_page_url {
            bindings = <&kp LG(RS(C))>;
            key-positions = <21 20 19>;
        };

        kana {
            bindings = <&kp LANG1>;
            key-positions = <25 24>;
        };

        ei {
            bindings = <&kp LANG2>;
            key-positions = <24 23>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        mkp_exit_AML: mkp_exit_AML {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &mkp MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &mkp MACRO_PLACEHOLDER>,
                <&macro_tap>,
                <&sl 4>;

            label = "MKP_EXIT_AML";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W             &kp E         &kp R                        &kp T                                       &kp Y        &kp U  &lt 5 I    &kp O    &lt 5 P
&kp A             &kp S             &kp D         &lt 1 F                      &kp G        &trans          &kp MINUS      &kp H        &kp J  &kp K      &kp L    &lt 5 COLON
&mt LEFT_SHIFT Z  &kp X             &kp C         &kp V                        &kp B        &trans          &kp SEMICOLON  &kp N        &kp M  &kp COMMA  &kp DOT  &mt LEFT_SHIFT SLASH
&kp TAB           &kp LEFT_CONTROL  &kp LEFT_ALT  &mt LEFT_COMMAND LEFT_SHIFT  &lt 2 SPACE  &kp ESCAPE      &kp BACKSPACE  &lt 3 ENTER                             &kp ESCAPE
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        FUNCTION {
            bindings = <
&trans          &trans   &trans        &trans  &trans                      &trans            &trans  &trans  &trans  &trans
&kp LEFT_SHIFT  &kp TAB  &kp LEFT_ALT  &trans  &trans  &trans      &trans  &trans            &trans  &trans  &trans  &trans
&trans          &trans   &trans        &trans  &trans  &trans      &trans  &trans            &trans  &trans  &trans  &trans
&trans          &trans   &trans        &trans  &trans  &trans      &trans  &lt 3 LEFT_SHIFT                          &trans
            >;
        };

        NUM {
            bindings = <
&kp EXCLAMATION  &kp ASTERISK  &kp PERCENT  &kp GRAVE      &kp SQT                                              &kp LEFT_BRACKET   &kp N7        &kp N8        &kp N9        &kp N0
&kp AT_SIGN      &kp HASH      &kp DOLLAR   &kp AMPERSAND  &kp NON_US_BACKSLASH  &trans      &kp C_VOLUME_UP    &kp RIGHT_BRACKET  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp MINUS
&kp LEFT_SHIFT   &trans        &trans       &kp LANG2      &kp LANG1             &trans      &kp C_VOLUME_DOWN  &trans             &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp EQUAL
&trans           &trans        &trans       &trans         &trans                &trans      &trans             &trans                                                       &kp K_MUTE
            >;
        };

        ARROW {
            bindings = <
&trans          &trans  &trans  &kp LS(LG(N5))    &kp LS(LG(N4))                                              &trans  &kp LG(C)       &kp UP_ARROW    &kp LG(P)        &trans
&kp A           &trans  &trans  &trans            &trans          &trans                &kp C_BRIGHTNESS_INC  &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans
&kp LEFT_SHIFT  &kp X   &kp C   &kp V             &trans          &trans                &kp C_BRIGHTNESS_DEC  &trans  &trans          &trans          &trans           &trans
&trans          &trans  &trans  &kp LEFT_COMMAND  &trans          &lt 6 LEFT_SHIFT      &trans                &trans                                                   &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&to_layer_0 Q  &to_layer_0 W  &to_layer_0 E  &to_layer_0 R     &to_layer_0 T                                           &to_layer_0 Y  &to_layer_0 U  &to_layer_0 I      &to_layer_0 O       &lt 5 P
&to_layer_0 A  &to_layer_0 S  &to_layer_0 D  &to_layer_0 F     &to_layer_0 G  &trans            &trans                 &to_layer_0 J  &mkp MB1       &to_layer_0 K      &to_layer_0 L       &to_layer_0 SEMICOLON
&to_layer_0 Z  &to_layer_0 X  &to_layer_0 C  &to_layer_0 V     &to_layer_0 B  &trans            &trans                 &to_layer_0 N  &to_layer_0 M  &to_layer_0 COMMA  &to_layer_0 PERIOD  &to_layer_0 SLASH
&kp TAB        &trans         &kp LEFT_ALT   &kp LEFT_COMMAND  &lt 2 SPACE    &lt 5 ESCAPE      &to_layer_0 BACKSPACE  &lt 3 ENTER                                                          &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &trans  &trans  &trans  &trans  &bt BT_SEL 1
&trans  &bt BT_SEL 0  &trans        &trans        &trans  &trans      &trans       &trans  &trans  &trans  &trans  &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans  &trans  &trans  &trans  &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                          &bt BT_CLR_ALL
            >;
        };
    };
};
